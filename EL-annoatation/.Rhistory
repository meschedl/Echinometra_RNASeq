getwd()
#saved trinotate report as a csv file
EL.trinotate.report <- read.csv("EL_trinotate_annotation_report.csv", header = TRUE)
head(EL.trinotate.report)
EL.trinotate.report[1:100,]
orthologs <- read.delim("LORF_EL90.pep__v__SPU_peptide.tsv", sep = "\t")
head(orthologs)
SPU.annot <- read.delim("gene_info_table.txt", sep = "\t")
head(SPU.annot)
SPU.annot[1:100,]
View(SPU.annot)
SPU.annot.t <- SPU.annot[,c(1:2,6:10,13:14)]
head(SPU.annot.t)
View(SPU.annot.t)
SPU.GO <- read.delim("go_table.txt", sep = "\t")
View(SPU.GO)
# get column names from read me file
colnames(SPU.annot.t) <- c("glean_id", "spu_id", "annotator", "gene_model_check", "aditional_edivence", "family_member", "common_name", "synonyms", "best_genbank_hit", "ortholog_homolog", "group_coordinator", "difficult_annotation_categories", "old_common_name", "manual_anno", "annotation_type", "overlap_gene", "whl_id", "curator")
# get column names from read me file
colnames(SPU.annot) <- c("glean_id", "spu_id", "annotator", "gene_model_check", "aditional_edivence", "family_member", "common_name", "synonyms", "best_genbank_hit", "ortholog_homolog", "group_coordinator", "difficult_annotation_categories", "old_common_name", "manual_anno", "annotation_type", "overlap_gene", "whl_id", "curator")
SPU.annot[1:100,]
SPU.annot.t <- SPU.annot[,c(1:2,6:10,13:14)]
head(SPU.annot.t)
View(SPU.annot.t)
View(SPU.annot)
# get column names from read me file
colnames(SPU.annot) <- c("glean_id", "spu_id", "annotator", "gene_model_check", "aditional_edivence", "family_member", "common_name", "synonyms", "best_genbank_hit", "ortholog_homolog", "group_coordinator", "difficult_annotation_categories", "old_common_name", "note", "manual_anno", "annotation_type", "overlap_gene", "whl_id", "curator")
SPU.annot[1:100,]
View(SPU.annot)
SPU.annot.t <- SPU.annot[,c(2,6:9)]
head(SPU.annot.t)
install.packages("naniar")
#libraries
library(naniar)
library(tidyverse)
library(dplyr)
SPU.annot.t %>% replace_with_na(replace = list(x = none)
SPU.annot.t %>% replace_with_na(replace = list(x = none))
head(SPU.annot.t)
SPU.annot.t %>% replace_with_na(replace = list(x = "none"))
SPU.annot.t[ SPU.annot.t == "none" ] <- NA
head(SPU.annot.t)
SPU.annot.t[is.na(SPU.annot.t$family_member) & is.na(SPU.annot.t$common_name) & is.na(SPU.annot.t$synonyms) & is.na(SPU.annot.t$best_genbank_hit),]
PSU.no.annot <- SPU.annot.t[is.na(SPU.annot.t$family_member) & is.na(SPU.annot.t$common_name) & is.na(SPU.annot.t$synonyms) & is.na(SPU.annot.t$best_genbank_hit),]
SPU.no.annot <- SPU.annot.t[is.na(SPU.annot.t$family_member) & is.na(SPU.annot.t$common_name) & is.na(SPU.annot.t$synonyms) & is.na(SPU.annot.t$best_genbank_hit),]
orthologs[1:100,]
dim(SPU.no.annot)
tr.orthologs <- strsplit(orthologs$LORF_EL90.pep, ",")
head(tr.orthologs)
install.packages("splitstackshape")
library(splitstackshape)
tr.orthologs <- cSplit(orthologs, LORF_EL90.pep, sep = ",", direction = "wide", drop = FALSE, makeEqual = FALSE)
tr.orthologs <- cSplit(orthologs, "LORF_EL90.pep", sep = ",", direction = "wide", drop = FALSE, makeEqual = FALSE)
head(tr.orthologs)
tr.orthologs <- cSplit(orthologs, "LORF_EL90.pep", sep = ",", direction = "wide", drop = TRUE, makeEqual = FALSE)
head(tr.orthologs)
EL.orthologs <- othologs %>% select(1,2)
EL.orthologs <- othologs %>%
select(1,2)
othologs %>%
select(1,2)
library(dplyr)
othologs %>%
select(1,2)
orthologs %>%
select(1,2)
EL.orthologs < - orthologs %>%
select(1,2)
EL.orthologs <- orthologs %>%
select(1,2)
head(EL.o)
head(EL.ort)
head(EL.orthologs)
tr.orthologs <- cSplit(EL.orthologs, "LORF_EL90.pep", sep = ",", direction = "wide", drop = TRUE, makeEqual = FALSE)
tr.orthologs[1:100,]
tr.orthologs$LORF_EL90.pep_01<- gsub(".p1","",tr.orthologs$LORF_EL90.pep_0)
tr.orthologs$LORF_EL90.pep_01<- gsub(".p1","",tr.orthologs$LORF_EL90.pep_01)
head(ttr.orthologs)
head(tr.orthologs)
tr.orthologs <- cSplit(EL.orthologs, "LORF_EL90.pep", sep = ",", direction = "wide", drop = TRUE, makeEqual = FALSE)
data[tr.orthologs] <- lapply(data[tr.orthologs, gsub, pattern = ".p1", replacement = "")
data[tr.orthologs] <- lapply(data[tr.orthologs], gsub, pattern = ".p1", replacement = "")
data[tr.orthologs] <-mapply(data[tr.orthologs], gsub, pattern = ".p1", replacement = "")
tr.orthologs.s <-mapply(tr.orthologs, gsub, pattern = ".p1", replacement = "")
tr.orthologs.s <-mapply(gsub, pattern = ".p1", replacement = "", tr.orthologs)
head(tr.orthologs.s)
tr.orthologs.s <- as.data.frame(tr.orthologs.s)
head(tr.orthologs.s)
tr.orthologs.s[1:100,]
tr.orthologs[1:100,]
# does not look like information is lost
# how many more .p# are there though? for sure there is a p2, there is also a .p3
# maybe to know I will have to "remove" a p4 and see if things change
# remove .p2
tr.orthologs.s2 <-mapply(gsub, pattern = ".p2", replacement = "", tr.orthologs.s)
# re-dataframe
tr.orthologs.s2 <- as.data.frame(tr.orthologs.s2)
# remove .p3
tr.orthologs.s3 <-mapply(gsub, pattern = ".p3", replacement = "", tr.orthologs.s2)
# re-dataframe
tr.orthologs.s3 <- as.data.frame(tr.orthologs.s3)
# see if there is a .p4?
tr.orthologs.s4 <-mapply(gsub, pattern = ".p4", replacement = "", tr.orthologs.s3)
tr.orthologs.s4 <- as.data.frame(tr.orthologs.s4)
install.packages("compareDF")
# try comparing them?
library(compareDF)
install.packages("arsenal")
# try comparing them?
library(arsenal)
comparedf(tr.orthologs.s4,tr.orthologs.s3)
View(tr.orthologs.s4)
View(tr.orthologs.s3)
# looks like there are differneces
# although confusing because it does say 0 not shared obsercations
# in theory only the first variable has a name change
summary(comparedf(tr.orthologs.s4,tr.orthologs.s3))
# seems to be a few
# what does this look like for ones where I know there is a difference?
summary(comparedf(tr.orthologs.s3,tr.orthologs.s2))
View(tr.orthologs.s4)
# looks like there are differneces
# although confusing because it does say 0 not shared obsercations
# in theory only the first variable has a name change
summary(comparedf(tr.orthologs.s4,tr.orthologs.s3))
tr.orthologs.s5 <-mapply(gsub, pattern = ".p4", replacement = "", tr.orthologs.s4)
tr.orthologs.s5 <- as.data.frame(tr.orthologs.s5)
comparedf(tr.orthologs.s4,tr.orthologs.s5)
summary(comparedf(tr.orthologs.s4,tr.orthologs.s5))
tr.orthologs.s5 <-mapply(gsub, pattern = ".p5", replacement = "", tr.orthologs.s4)
tr.orthologs.s5 <- as.data.frame(tr.orthologs.s5)
summary(comparedf(tr.orthologs.s4,tr.orthologs.s5))
#do p6
tr.orthologs.s6 <-mapply(gsub, pattern = ".p6", replacement = "", tr.orthologs.s5)
tr.orthologs.s6 <- as.data.frame(tr.orthologs.s6)
summary(comparedf(tr.orthologs.s6,tr.orthologs.s5))
tr.orthologs.s5[1:100,]
colnames(tr.orthologs)
colnames(tr.orthologs.s5) <- c("Orthogroup", "LORF_EL90.pep_01", "LORF_EL90.pep_02", "LORF_EL90.pep_03", "LORF_EL90.pep_04", "LORF_EL90.pep_05", "LORF_EL90.pep_06", "LORF_EL90.pep_07", "LORF_EL90.pep_08", "LORF_EL90.pep_09", "LORF_EL90.pep_10", "LORF_EL90.pep_11", "LORF_EL90.pep_12", "LORF_EL90.pep_13", "LORF_EL90.pep_14", "LORF_EL90.pep_15", "LORF_EL90.pep_16", "LORF_EL90.pep_17", "LORF_EL90.pep_18")
tr.orthologs.s5[1:100,]
head(EL.orthologs)
tr. orthogroups <- separate_rows(EL.orthologs, "LORF_EL90.pep", sep = ",", convert = FALSE)
tr.orthogroups <- separate_rows(EL.orthologs, "LORF_EL90.pep", sep = ",", convert = FALSE)
#libraries
library(naniar)
library(tidyverse)
library(dplyr)
tr.orthogroups <- separate_rows(EL.orthologs, "LORF_EL90.pep", sep = ",", convert = FALSE)
head(tr.orthogroups)
# remove extra characters of .p#s
tr.orthogroups.2 <-mapply(gsub, pattern = ".p1", replacement = "", tr.orthogroups)
tr.orthogroups.2 <- as.data.frame(tr.orthogroups.2)
tr.orthogroups.2[1:100,]
# I don't know why this always removes the column names but it does
# remove .p2
tr.orthogroups.2 <-mapply(gsub, pattern = ".p2", replacement = "", tr.orthogroups.2)
tr.orthogroups.2 <- as.data.frame(tr.orthogroups.2)
tr.orthologs.s6 <- as.data.frame(tr.orthologs.s6)
tr.orthogroups.2 <-mapply(gsub, pattern = ".p3", replacement = "", tr.orthogroups.2)
tr.orthogroups.2 <- as.data.frame(tr.orthogroups.2)
# remove .p4
tr.orthogroups.2 <-mapply(gsub, pattern = ".p4", replacement = "", tr.orthogroups.2)
tr.orthogroups.2 <- as.data.frame(tr.orthogroups.2)
# remove .p5
tr.orthogroups.2 <-mapply(gsub, pattern = ".p5", replacement = "", tr.orthogroups.2)
tr.orthogroups.2 <- as.data.frame(tr.orthogroups.2)
colnames(tr.orthogroups.2) <- c("Orthogroup", "LORF_EL90.pep")
tr.orthogroups.2[400:500,]
head(EL.orthologs)
head(tr.orthogroups)
# collapse df in to one column multiple rows instead of one row multiple columns
tr.orthogroups <- separate_rows(EL.orthologs, "LORF_EL90.pep", sep = ",", convert = FALSE)
head(tr.orthogroups)
SPU.orthologs <- orthologs %>%
select(1,3)
head(SPU.orthologs)
# use separate rows on this one
SPU.orthogroups <- separate_rows(SPU.orthologs, "SPU_peptide", sep = ",", convert = FALSE)
head(SPU.orthogroups)
tr.orthogroups.2[400:500,]
head(tr.orthogroups)
tr.orthogroups.2[400:500,]
colnames(tr.orthogroups.2) <- c("Orthogroup", "transcript_id")
tr.orthogroups.2[400:500,]
# in EL.trinotate.report transcript_id matches same in tr.orthogroups.2
orthogroups.trinotate.merge <- merge(EL.trinotate.report, tr.orthogroups.2, by= "transcript_id", sort = TRUE)
orthogroups.trinotate.merge[1:100,]
View(SPU.orthogroups)
# 7477 transcripts with no identification
SPU.no.annot[1:100,]
#change column nmae to match annotation file
colnames(SPU.orthogroups) <- c("Orthogroup", "spu_id")
head(SPU.orthogroups)
orthogroups.spu.noannot.merge <- merge(SPU.no.annot, SPU.orthogroups, by= "spu_id", sort = TRUE)
orthogroups.spu.noannot.merge[1:100,]
dim(orthogroups.spu.noannot.merge)
orthogroups.spu.noannot.merge[1:100,]
# first select only SPU and Ortholog columns
Ortho.noannot <- orthogroups.spu.noannot.merge %>%
select(1,6)
#libraries
library(naniar)
library(tidyverse)
library(dplyr)
# first select only SPU and Ortholog columns
Ortho.noannot <- orthogroups.spu.noannot.merge %>%
select(1,6)
head(Ortho.noannot)
orthogroups.trinotate.merge[1:100,]
missing.SPU.EL.annots <- merge(orthogroups.trinotate.merge, Ortho.noannot, by= "Orthogroup", sort = TRUE)
missing.SPU.EL.annots[1:100,]
dim(missing.SPU.EL.annots)
# 3455
missing.SPU.EL.annots[1:100,]
#libraries
library(naniar)
library(tidyverse)
library(dplyr)
